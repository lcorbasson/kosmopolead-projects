
  <%= f.hidden_field :issue_types_id %>    
    <% if !@issue.is_issue? %>
        <p>
          <label><%= l(:label_phase_id) %></label>
          <%= f.select :parent_id, @project.issues.stages.collect {|i| [i.subject, i.id] }, :include_blank => true%>
        </p>
    <% end %>
    <% if @issue.is_issue? %>
        <p>
          <label for="parent"><%= l(:label_parent) %></label>
          <%  Issue::RELATION_TYPE.each do |relation| %>
            <%= radio_button_tag :issue_relation_type, relation, relation, :onclick => "javascript:checkTypeRelation(this,'#{type_event_project_issues_path(@project)}')" %><%= l("#{relation}") %>
          <%  end %>
          <span id="type_relation">
          </span>
        </p>
        <p>
          <label><%= l(:label_tracker_id) %></label>
          <%= f.select :tracker_id, @project.trackers.collect {|t| [t.name, t.id]}, :required => true %></p>
          
      <% end %>

<div id="issue_descr_fields">
    <p>
      <label><%= l(:label_subject) %></label>
      <%= f.text_field :subject, :size => 80, :required => true %>
    </p>
    <p>
      <label><%= l(:label_description) %></label>
      <%= f.text_area :description,
        :cols => 60,
        :rows => (@issue.description.blank? ? 10 : [[10, @issue.description.length / 50].max, 100].min),
        :accesskey => accesskey(:edit),
        :class => 'wiki-edit' %>
    </p>
</div>
<% case @issue.type.name
  when "ISSUE" %>
    <div class="splitcontentleft">
      <% if @issue.new_record? || @allowed_statuses.any?  %>
          <p>
              <label><%= l(:label_status_id) %></label>
              <%= f.select :status_id, (@allowed_statuses.collect {|p| [p.name, p.id]}), :required => true %>
          </p>
      <% else %>
          <p>
            <label><%= l(:label_status_id) %></label> <%= f.select :status_id, (@allowed_statuses.collect {|p| [p.name, p.id]}), :required => true %><%#= @issue.status.name %>
          </p>
      <% end %>
      <p>
        <label><%= l(:label_priority_id) %></label>
        <%= f.select :priority_id, (@priorities.collect {|p| [p.name, p.id]}), :required => true %>
      </p>
      <p>
        <label><%= l(:label_assigned_to) %></label>
        <%= select_tag 'assigned_to_id[]',
          options_for_select(@issue.assignable_users.collect {|m| [m.name, m.id]}),
          :multiple => true, :size => 10, :style => "width:150px" %>
      </p>    
      <% unless @project.issue_categories.empty? %>
        <p>
          <label><%= l(:label_category_id) %></label>
          <%= f.select :category_id, (@project.issue_categories.collect {|c| [c.name, c.id]}), :include_blank => true %>
          <%= prompt_to_remote(l(:label_issue_category_new),
            l(:label_issue_category_new), 'category[name]',
            {:controller => 'projects', :action => 'add_issue_category', :project_id => @project},
            :class => 'small', :tabindex => 199) if authorize_for('projects', 'add_issue_category') %>
        </p>
      <% end %>
     
     
          <%= content_tag('p', "<label>#{l(:label_fixed_version_id)}</label>"+f.select(:fixed_version_id,
              (@project.versions.sort.collect {|v| [v.name, v.id]}),
              { :include_blank => true })) unless @project.versions.empty? %>
     
    </div>
    <div class="splitcontentright">
      <p>
          <label><%= l(:label_start_date) %></label>
          <%= f.text_field :start_date, :size => 10,:class=>"ui-datepicker" %>
      </p>
      <p>
          <label><%= l(:label_due_date) %></label>
          <%= f.text_field :due_date, :size => 10,:class=>"ui-datepicker" %>
      </p>

      <%#*<p>%>
          <%#*<label><%= l(:label_estimated_hours) </label>%>
          <%#= f.text_field :estimated_hours, :size => 3 %>
          <%#= @project.time_unit_label %>
      <%#*</p>%>

      <p>
          <label><%= l(:label_done_ratio) %></label>
          <%= f.select :done_ratio, ((0..10).to_a.collect {|r| ["#{r*10} %", r*10] }) %>
      </p>
    </div>
    <div style="clear:both;"> </div>
    <%= render :partial => 'form_custom_fields' %>
    <% if @issue.new_record? && User.current.allowed_to?(:add_issue_watchers, @project) -%>
      <p>
        <label><%= l(:label_issue_watchers) %></label>
        <% @issue.project.users.sort.each do |user| -%>
          <%= check_box_tag 'issue[watcher_user_ids][]', user.id, @issue.watcher_user_ids.include?(user.id) %> <%=h user %>
        <% end -%>
      </p>
    <% end %>
 <% when "MILESTONE" %>  
    <p>
      <label><%= l(:label_date) %></label>
      <%= f.text_field :start_date, :size => 10,:class=>"ui-datepicker" %>
    </p>
  <% when "STAGE" %>
    <div class="splitcontentleft">
      <p>
        <label><%= l(:label_start_date) %></label>
        <%= f.text_field :start_date, :size => 10,:class=>"ui-datepicker" %>
      </p>
      <p>
        <label><%= l(:label_due_date) %></label>
         <%= f.text_field :due_date, :size => 10,:class=>"ui-datepicker" %>
      </p>
    </div>
  <% end %>
  <div style="clear:both"></div>
  <%= call_hook(:view_issues_form_details_bottom, { :issue => @issue, :form => f }) %>


  
  <p>
    <label><%= l(:label_resources) %></label>
    <%= f.text_field :resources %>
  </p>
  <p>
    <label><%= l(:label_estimated_hours) %></label>
    <%= f.text_field :estimated_hours %>  <%= @project.time_unit_label%>
  </p>

<%= wikitoolbar_for 'issue_description' %>

<script>
function checkTypeRelation(t,url){ 
    jQuery.ajax({dataType:'script', url:url, data:'type=' + t.value,type: "get", success: function(msg){eval(msg)}});
}
 </script>

 <%= initialize_datepicker() %>